import telebot
from telebot import types
from models_pack import db_access, my_loging
from token_const import token

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start'])
@bot.message_handler(func=lambda message: message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
def main_start(message: types.Message):
    my_loging.info('{user} -- –Ω–∞—á–∞—Ç–∞ —Ä–∞–±–æ—Ç–∞ —Å –±–æ—Ç–æ–º, –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ /start –∏–ª–∏ –ì–∞–≤–Ω–æ–µ –º–µ–Ω—é'.format(user=message.from_user))
    markup = types.ReplyKeyboardMarkup()
    markup.row('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ãüì≤', '–õ–∏–¥–µ—Ä—ã –ø–æ –∏–≥—Ä–∞–º‚öúÔ∏è')
    markup.row('–°–ø—Ä–∞–≤–∫–∞üåö')
    bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, ' + message.from_user.first_name
                     + ', —á—Ç–æ –∂–µ–ª–∞–µ—à—å?', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ãüì≤')
def aviable_games(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    list_of_games = db_access.get_all_games()
    for game in list_of_games:
        markup.row(game.game_name)
    markup.row('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
    msg = bot.send_message(message.from_user.id, '–í–æ—Ç —Ç–µ–±–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä',
                           reply_markup=markup)
    bot.register_next_step_handler(msg, game_info)


def game_info(message: types.Message):
    game = db_access.search_game(message.text)
    if game is not None:
        markup = types.ReplyKeyboardMarkup()
        markup.row('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É‚õ≥Ô∏è', '–†–µ–π—Ç–∏–Ω–≥üìä')
        markup.row('–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏', '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ãüì≤')
        msg = bot.send_message(message.from_user.id, game.game_description,
                               reply_markup=markup)
        if msg.text == '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É‚õ≥Ô∏è':
            if db_access.get_user(message.from_user.id) is None:
                db_access.create_user(message.from_user.first_name, message.from_user.id, game.game_name)
            bot.register_next_step_handler(msg, start_game)
        elif msg.text == '–†–µ–π—Ç–∏–Ω–≥üìä':
            pass
        elif msg.text == '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏':
            pass

    else:
        bot.send_message(message.from_user.id, '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∏–≥—Ä—ã')


def start_game(message: types.Message):
    user = db_access.get_user(message.from_user.id)
    game = user.user_current_game
    bot.send_message(message.from_user.id, '–í—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É: {game}'.format(game=game.game_name))


bot.polling(True)
